# color scheme (choices: red, blue, green, purple)
SCHEME="red"  

# enable prompt expansion for promps needing command substitution
setopt PROMPT_SUBST

# render typed commands in bold
zle_highlight=(default:bold)

# colors (ref: https://jonasjacek.github.io/colors/)
TF="11"   # time fg
PF="15"   # path fg
GB="237"  # git bg
GF="10"   # git fg (clean)
GF2="197" # git fg (dirty)
TKF="10"  # status tick
CRF="1"   # status cross
case $SCHEME in
  green)
    TB="34"  # time bg
    PB="28"  # path bg
    ;;
  blue)
    TB="27"  # time bg
    PB="20"  # path bg
    ;;
  purple)
    TB="129" # time bg 
    PB="54"  # path bg
    ;;
  *)         # default: red
    TB="9"   # time bg
    PB="1"   # path bg 
    ;;
esac

function gitStatus() {
  # CALL: gitStatus <color-when-clean> <color-when-dirty
  # Returns name of current branch, colored according to clean/dirty status
  local b=`/usr/local/bin/git symbolic-ref HEAD --short 2> /dev/null`
  if [[ -n "$b" ]]; then
    if [[ -z `/usr/local/bin/git status --porcelain 2> /dev/null` ]]; then
      echo "%F{$1}$b"
    else
      echo "%F{$2}$b"
    fi
  fi
}

function leftPrompt() {
  local git="$(gitStatus $GF $GF2)"
  local prompt="%K{$TB}%F{0}%K{$TB}%F{$TF}%B %T %K{$PB}%F{$TB}%F{$PF}%B %~ %b"
  [[ -n "$git" ]] && prompt="$prompt%K{$GB}%F{$PB}%F{$FG}%B $git %b%K{$PB}%F{$GB}"
  prompt="$prompt%F{$PB}%k%f"
  echo "$prompt"
}

function rightPrompt() {
  local code=$?
  [[ $code -eq 0 ]] && echo "%F{$TKF}%B\u2714%f%b" || echo "%F{$CRF}%B\u2718%f%b$code"
}

# Single quotes required to ensure function evaluation for every prompt render
export PROMPT='$(leftPrompt) '
export RPROMPT='$(rightPrompt)' 

